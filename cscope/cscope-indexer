#! /bin/bash
###############################################################################
#
# File:         cscope-indexer
# RCS:          $Header: /users/darrylo/sources/nobackup/cscope/xemacs/RCS/cscope-indexer,v 1.4 2000/05/09 23:09:51 darrylo Exp darrylo $
# Description:  Script to index files for cscope
#
#		This script generates a list of files to index
#		(cscope.out), which is then (optionally) used to
#		generate a cscope database.  You can use this script
#		to just build a list of files, or it can be used to
#		build a list and database.  This script is not used to
#		just build a database (skipping the list of files
#		step), as this can be simply done by just calling
#		"cscope -b".
#
#		Normally, cscope will do its own indexing, but this
#		script can be used to force indexing.  This is useful
#		if you need to recurse into subdirectories, or have
#		many files to index (you can run this script from a
#		cron job, during the night).  It is especially useful
#		for large projects, which can contstantly have source
#		files added and deleted; by using this script, the
#		changing sources files are automatically handled.
#
#		Currently, any paths containing "/CVS/" or "/RCS/" are
#		stripped out (ignored).
#
#		This script is written to use only basic shell features, as
#		not all shells have advanced features.
#
# Author:       Darryl Okahata
# Created:      Thu Apr 27 17:12:14 2000
# Modified:     Tue May  9 16:09:45 2000 (Darryl Okahata) darrylo@soco.agilent.com
# Language:     Shell-script
# Package:      N/A
# Status:       Experimental
#
# (C) Copyright 2000, Darryl Okahata, all rights reserved.
#
###############################################################################
#
# Usage:
#
#     cscope-indexer [ -v ] [-f database_file ] [-i list_file ] [ -l ] [ -r ]
#
# where:
#
#     -f database_file
#          Specifies the cscope database file (default: cscope.out).
#
#     -i list_file
#          Specifies the name of the file into which the list of files
#          to index is placed (default: cscope.files).
#
#     -r
#          Recurse into subdirectories to locate files to index.
#          Without this option, only the current directory is
#          searched.
#
#     -v
#          Be verbose.  Output simple progress messages.
#
#
###############################################################################
set -e

# May have to edit this:
PATH="/usr/local/bin:/sbin:/usr/sbin:/bin:/usr/bin:$PATH"
export PATH

DIR=$WS
INC_FILE="$HOME/cscope/cscope.include"
REM_FILE="$HOME/cscope/cscope.remove"
LIST_FILE='cscope.files'
DATABASE_FILE='cscope.out'
RECURSE=
VERBOSE=
export DIR RECURSE			# Need to pass these to subprocesses

while [ -n "$1" ]
do
    case "$1" in
    -f)
	if [ "X$2" = "X" ]
	then
	    echo "$0: No database file specified" >&2
	    exit 1
	fi
	DATABASE_FILE="$2"
	shift
	;;
    -i)
	if [ "X$2" = "X" ]
	then
	    echo "$0: No list file specified" >&2
	    exit 1
	fi
	LIST_FILE="$2"
	shift
	;;
    -r)
	RECURSE=1
	;;
    -v)
	VERBOSE=1
	;;
    *)
	DIR="$1"
	;;
    esac
    shift
done

cd $DIR
# Delete any existing cscope files
echo "Deleting existing cscope.out cscope.in.out cscope.po.out TAGS"

rm -rf cscope.out cscope.in.out cscope.po.out tags TAGS


#Recurse only when LIST_FILE is not present
if [ ! -e $LIST_FILE ]; then
    if [ "X$VERBOSE" != "X" ]
    then
        echo "Creating list of files to index ..."
    fi

    #Standard and other includes
    > $LIST_FILE
    cat $INC_FILE |  \
    while read DIR_PATH
    do
       find $DIR_PATH -type f               \
            -name "*.[ch]" -or              \
            -name "*.yang"  >> $LIST_FILE
    done

    PATTERNS=$(cat $REM_FILE)
    for pattern in $PATTERNS; do
        if [[ -z $PATTERN ]]; then
            PATTERN="$pattern"
        else
            PATTERN="$PATTERN\|$pattern"
        fi
    done

    #Index workspace files
    find $WS -type f                        \
         -name "*.[ch]" -or                 \
         -name "*.yang" -or                 \
         -name "*.xml"  -or                 \
         -name "*.proto" |                  \
     grep -v $PATTERN >> $LIST_FILE

    if [ "X$VERBOSE" != "X" ]
    then
        echo "Creating list of files to index ... done"
    fi
fi


if [ "X$VERBOSE" != "X" ]
then
    echo "Indexing files ..."
fi

cscope -u -b -q -i $LIST_FILE

if [ "X$VERBOSE" != "X" ]
then
    echo "Indexing files ... done"
fi

if [ "X$VERBOSE" != "X" ]
then
    echo "Creating tags ..."
fi

ctags -L $LIST_FILE

if [ "X$VERBOSE" != "X" ]
then
    echo "Creating tags ... done"
fi
exit 0
